# encoding: utf-8



	<!-- IMAGE -->
	<% if work.image? %>
		<div class="text-center" style="margin-left: auto; margin-right: auto;">
			<%= image_tag work.document_url(:fitted), class: "shadowy-figure-image-preview image-show", style: "margin-right: auto; margin-left: auto;" %>
		</div>

	<!-- PDF -->
	<% elsif work.pdf? %>
	<div class="text-center">
		<iframe  src=<%= work.document_url %> class="pdf" > </iframe>
		</div>

	<!-- TEXT -->
	<% elsif ( work.spreadsheet? || work.powerpoint? || work.open_office? || work.i_works? ) and work.content_type != 'application/vnd.oasis.opendocument.text' %>
		<div class="doc-text-container">
			<div class="doc-text-content">
				<style>
					pre {
						background-color: white;
						border: none;
					}
				</style>
				<%= content_tag('pre', work.file_content_text) %>

			</div>
		</div>


		<!-- <iframe src=<%= work.document_url.force_encoding("UTF-8") %> width="600" height="700" style="border: 1px solid gray;"></iframe> -->


	<!-- MARKDOWN -->
	<!-- show mardown is preference over html because of renderer options -->
	<% elsif work.docordocx? || work.markdown? || work.type_html? || work.latex? || work.plain_text? || work.type_rtf? || work.content_type.blank? || work.content_type == 'application/vnd.oasis.opendocument.text' %>
		<div class="doc-text-container" > <!-- style="overflow: scroll;" -->

      <style>
       /* .fullscreen { z-index: 9999; } */
       .editor-toolbar.fullscreen { top: 80px; }
       .CodeMirror-fullscreen { top: 130px; }
       .editor-preview-side { top: 130px; }
      </style>

				<% if !project_owner?(@project) %>

				<div id="public-doc-text-view-<%= work.id %>" class="doc-text-content public-doc-text-view">

					<!-- <div class="capture-style" style=""> -->
						<%= markdown(work.file_content_md) %>
					<!-- </div> -->

				</div>


        <% else %>

					<!-- style="display: none;" --> <!-- THIS FIXES THE FAILURE TO DISPLAY TEXT RIGHT AWAY -->

				<div class="editor-area" >

				<!-- TEXTAREA GOES HERE -->
					<textarea id="mde-<%= work.id %>" class="editable" ><%= work.file_content_md %></textarea>

				</div>

				<script>

				  $(function () {

              function ajaxFileText() {
                      if (!gotText) {
                          $markdownViewText.html("<h1>Loading...</h1>");
                  $.get("/works/<%= work.slug %>/get", function (res) {
                      if (res.file_content_md !== null && res.file_content_md.trim() !== "") {
                          gotText = true;
                      $markdownViewText.html(markdown.toHTML(res.file_content_md));
                          $("textarea#mde-<%= work.id %>").html(res.file_content_md);
                          }
                  })
                   .fail(function (err) {
                       console.log(err);
                   });
                          }
              }

              var gotText = true;
              var $markdownViewText = $("#public-doc-text-view-<%= work.id %>");
              console.log("mdviewtext", $markdownViewText.text().trim());
              if ($markdownViewText.text().trim() === "") {
                  gotText = false;
                  setInterval(
                    ajaxFileText
                    , 2000);
                  }
				  	// $('.editable').hide();
				  	// $('.editor-area').hide(); // <-- doesn't do anything different than above

						var versionEditor<%= work.id %> = new SimpleMDE({
						  element: document.getElementById("mde-<%= work.id %>"),
						  spellChecker: false
						});

						/*----------  elements  ----------*/
						// var beginNewVersionButton<%= work.id %> = ;


						/*----------  SAVE :: post update from simplemde  ----------*/

						versionEditor<%= work.id %>.codemirror.on("change", function(){

								$(".update-version-<%= work.id %>").removeClass('disabled');
								$('.leave-edit-mode-safely-button').hide();

								$('.leave-edit-mode-dangerously-button').show();

						});

						$(".update-version-<%= work.id %>").on('click', function() {

							console.log('begin put');
							$('.left-without-saving-alert').hide();

						  var updatedFileContentMD = versionEditor<%= work.id %>.value();

						  $.ajax({
						  	type: "PUT",
						  	url: "<%= work_path(work.id) %>"+".js", // http://stackoverflow.com/questions/6919801/jquery-ajax-request-not-triggering-js-response-from-rails-controller
						  	// literally an object
						  	data: { work: { file_content_md: updatedFileContentMD.toString() }},
						  	success: function (data) {
						  		// alert("ok!");
						  		// return false;
						  		console.log('ajax success');
						  		// return false;
						  		$('#versions-different-alert').show();

						  	},
						  	error: function (data) {
						  		// alert("no!!");
						  		console.log('ajax error: ' + data.statusText);
						  		// return false;
						  	}
						  });
						});

						});

				</script>

				<% end %>

		</div>



    <!-- IF FILE TYPE NOT SUPPORTED -->
	<% else %>
		<div class="text-muted">
		<p>
			Right now we only actively support the following file types for indexing and previewing. <br>
			<ul>
				<% DocumentUploader::STRONG_ARM.each do |ext| %>
					<li><%= "."+"#{ext}" %></li>
				<% end %>
			</ul>
			<br>
			And, while we never make any promises about the content of this site, we particularly never make promises about file types we don't actively support.
		</p>
		</div>
	<% end %>
